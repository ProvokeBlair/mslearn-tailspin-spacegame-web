trigger:
- '*'

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  acrName: 'SpaceGameContainer'  # ACR name (without .azurecr.io)
  containerRepository: 'tailspin-spacegame'  # ACR repository
  tag: '$(Build.BuildId)'  # Unique tag per build
  serviceName: 'SpaceGameMSDemo'  # Azure Web App name
  resourceGroup: 'DemoSpaceGame'  # Azure Resource Group
  azureSubscription: 'BlairSpaceGameDemo'  # Azure DevOps service connection
  containerName: 'SpaceGameContainer'  # Name of the ACI instance

steps:
# Use .NET SDK 6.x
- task: UseDotNet@2
  displayName: 'Use .NET SDK 6.x'
  inputs:
    packageType: sdk
    version: '6.x'

# Run npm install
- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

# Compile Sass assets
- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'

# Run gulp tasks
- task: gulp@1
  displayName: 'Run gulp tasks'

# Write build info
- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

# Restore project dependencies
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# Build the project
- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'
    
# Publish the project
- task: DotNetCoreCLI@2
  displayName: 'Publish the project - Release'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build -'